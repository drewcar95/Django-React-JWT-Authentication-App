{"ast":null,"code":"var _jsxFileName = \"/Users/drewtavcar/Desktop/projects/frontend/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  let [authTokens, setAuthTokens] = useState(() => localStorage.getItem('authTokens') ? JSON.parse(localStorage.getItem('authTokens')) : null);\n  let [user, setUser] = useState(() => localStorage.getItem('authTokens') ? jwt_decode(localStorage.getItem('authTokens')) : null);\n  let [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  let loginUser = async e => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n  let updateToken = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        refresh: authTokens === null || authTokens === void 0 ? void 0 : authTokens.refresh\n      })\n    });\n    let data = await response.json();\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n    if (loading) {\n      setLoading(false);\n    }\n  };\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser\n  };\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n    let fourMinutes = 1000 * 60 * 4;\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextData,\n    children: loading ? null : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n};\n_s2(AuthProvider, \"qzK9vYoXprwKze4NvFZRh5/73zg=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jwt_decode","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authTokens","setAuthTokens","localStorage","getItem","JSON","parse","user","setUser","loading","setLoading","navigate","loginUser","e","preventDefault","response","fetch","method","headers","body","stringify","username","target","value","password","data","json","status","access","setItem","alert","logoutUser","removeItem","updateToken","refresh","contextData","fourMinutes","interval","setInterval","clearInterval","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/drewtavcar/Desktop/projects/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext();\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  let [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem('authTokens')\n      ? JSON.parse(localStorage.getItem('authTokens'))\n      : null\n  );\n  let [user, setUser] = useState(() =>\n    localStorage.getItem('authTokens')\n      ? jwt_decode(localStorage.getItem('authTokens'))\n      : null\n  );\n  let [loading, setLoading] = useState(true);\n\n  const navigate = useNavigate();\n\n  let loginUser = async (e) => {\n    e.preventDefault();\n    let response = await fetch('http://127.0.0.1:8000/api/token/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        username: e.target.username.value,\n        password: e.target.password.value,\n      }),\n    });\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n      navigate('/');\n    } else {\n      alert('Something went wrong!');\n    }\n  };\n\n  let logoutUser = () => {\n    setAuthTokens(null);\n    setUser(null);\n    localStorage.removeItem('authTokens');\n    navigate('/login');\n  };\n\n  let updateToken = async () => {\n    let response = await fetch('http://127.0.0.1:8000/api/token/refresh/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ refresh: authTokens?.refresh }),\n    });\n\n    let data = await response.json();\n\n    if (response.status === 200) {\n      setAuthTokens(data);\n      setUser(jwt_decode(data.access));\n      localStorage.setItem('authTokens', JSON.stringify(data));\n    } else {\n      logoutUser();\n    }\n\n    if (loading) {\n      setLoading(false);\n    }\n  };\n\n  let contextData = {\n    user: user,\n    authTokens: authTokens,\n    loginUser: loginUser,\n    logoutUser: logoutUser,\n  };\n\n  useEffect(() => {\n    if (loading) {\n      updateToken();\n    }\n\n    let fourMinutes = 1000 * 60 * 4;\n\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken();\n      }\n    }, fourMinutes);\n    return () => clearInterval(interval);\n  }, [authTokens, loading]);\n\n  return <AuthContext.Provider value={contextData}>{loading ? null : children}</AuthContext.Provider>;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}